Here's a sample `package.json` for a luxury FashionTV cosmetics website built with React and TypeScript. This configuration includes essential dependencies for a React application, TypeScript support, and some styling libraries that can help achieve an elegant design.

```json
{
  "name": "fashion-tv-cosmetics",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "dependencies": {
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-router-dom": "^6.0.0",
    "styled-components": "^5.3.0",
    "axios": "^0.21.1",
    "formik": "^2.2.6",
    "yup": "^0.32.9",
    "react-icons": "^4.2.0"
  },
  "devDependencies": {
    "typescript": "^4.4.0",
    "@types/react": "^17.0.0",
    "@types/react-dom": "^17.0.0",
    "@types/react-router-dom": "^5.3.0",
    "eslint": "^7.32.0",
    "eslint-plugin-react": "^7.28.0",
    "eslint-plugin-import": "^2.24.2"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
```

### Explanation of Key Dependencies:
- **react** and **react-dom**: Core libraries for building the React application.
- **react-router-dom**: For handling routing in the application.
- **styled-components**: For styling components with CSS-in-JS, which can help achieve the elegant design.
- **axios**: For making HTTP requests, useful for fetching product data or other resources.
- **formik** and **yup**: For handling forms and validation, which can be useful for user input (e.g., contact forms, checkout).
- **react-icons**: To include high-quality icons in your design.

### Development Dependencies:
- **typescript**: Adds TypeScript support to the project.
- **@types/react** and **@types/react-dom**: Type definitions for React and React DOM.
- **eslint** and related plugins: For linting and maintaining code quality.

You can create a new React app with TypeScript using Create React App and then replace the generated `package.json` with the one above. After that, run `npm install` to install the dependencies.